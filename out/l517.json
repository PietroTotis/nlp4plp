{
  "owner": "liselot", 
  "ex_id": 517, 
  "words": {
    "1": {
      "1": {
        "sentence": 1, 
        "nlp_stem": "sam", 
        "index": 1, 
        "type": "word", 
        "nlp_pos": "NNP", 
        "text": "Sam", 
        "key": "1-1"
      }, 
      "2": {
        "sentence": 1, 
        "nlp_stem": "be", 
        "index": 2, 
        "type": "word", 
        "nlp_pos": "VBZ", 
        "text": "is", 
        "key": "1-2"
      }, 
      "3": {
        "sentence": 1, 
        "nlp_stem": "go", 
        "index": 3, 
        "type": "word", 
        "nlp_pos": "VBG", 
        "text": "going", 
        "key": "1-3"
      }, 
      "4": {
        "sentence": 1, 
        "nlp_stem": "to", 
        "index": 4, 
        "type": "word", 
        "nlp_pos": "TO", 
        "text": "to", 
        "key": "1-4"
      }, 
      "5": {
        "sentence": 1, 
        "nlp_stem": "assemble", 
        "index": 5, 
        "type": "word", 
        "nlp_pos": "VB", 
        "text": "assemble", 
        "key": "1-5"
      }, 
      "6": {
        "sentence": 1, 
        "nlp_stem": "a", 
        "index": 6, 
        "type": "word", 
        "nlp_pos": "DT", 
        "text": "a", 
        "key": "1-6"
      }, 
      "7": {
        "sentence": 1, 
        "nlp_stem": "computer", 
        "index": 7, 
        "type": "word", 
        "is_group": true, 
        "nlp_pos": "NN", 
        "text": "computer", 
        "key": "1-7", 
        "group": {
          "constraints": [], 
          "size": {
            "words": [
              "2-7", 
              "2-14", 
              "2-18", 
              "2-25"
            ], 
            "mention": "by_content", 
            "number": "4"
          }, 
          "is_sequence": false, 
          "properties": []
        }
      }, 
      "8": {
        "sentence": 1, 
        "nlp_stem": "by", 
        "index": 8, 
        "type": "word", 
        "nlp_pos": "IN", 
        "text": "by", 
        "key": "1-8"
      }, 
      "9": {
        "sentence": 1, 
        "nlp_stem": "himself", 
        "index": 9, 
        "type": "word", 
        "nlp_pos": "PRP", 
        "text": "himself", 
        "key": "1-9"
      }, 
      "10": {
        "sentence": 1, 
        "nlp_stem": ".", 
        "index": 10, 
        "type": "punct", 
        "nlp_pos": ".", 
        "text": ".", 
        "key": "1-10"
      }
    }, 
    "2": {
      "22": {
        "sentence": 2, 
        "nlp_stem": "and", 
        "index": 22, 
        "type": "word", 
        "nlp_pos": "CC", 
        "text": "and", 
        "key": "2-22"
      }, 
      "23": {
        "sentence": 2, 
        "nlp_stem": "an", 
        "index": 23, 
        "type": "word", 
        "nlp_pos": "DT", 
        "text": "an", 
        "key": "2-23"
      }, 
      "24": {
        "sentence": 2, 
        "nlp_stem": "accessory", 
        "index": 24, 
        "type": "word", 
        "nlp_pos": "JJ", 
        "text": "accessory", 
        "key": "2-24"
      }, 
      "25": {
        "sentence": 2, 
        "nlp_stem": "bundle", 
        "index": 25, 
        "type": "word", 
        "nlp_pos": "NN", 
        "property": {
          "is_question": false, 
          "scope": "all", 
          "value": "bundle"
        }, 
        "text": "bundle", 
        "key": "2-25"
      }, 
      "26": {
        "sentence": 2, 
        "nlp_stem": "from", 
        "index": 26, 
        "type": "word", 
        "nlp_pos": "IN", 
        "text": "from", 
        "key": "2-26"
      }, 
      "27": {
        "sentence": 2, 
        "nlp_stem": "five", 
        "index": 27, 
        "type": "word", 
        "nlp_pos": "CD", 
        "text": "five", 
        "corenlp": {
          "number": 5
        }, 
        "key": "2-27"
      }, 
      "28": {
        "sentence": 2, 
        "nlp_stem": "local", 
        "index": 28, 
        "type": "word", 
        "nlp_pos": "JJ", 
        "text": "local", 
        "key": "2-28"
      }, 
      "29": {
        "sentence": 2, 
        "nlp_stem": "store", 
        "index": 29, 
        "type": "word", 
        "is_group": true, 
        "nlp_pos": "NNS", 
        "text": "stores", 
        "corenlp": {
          "size": {
            "words": [
              "2-27"
            ], 
            "mention": "explicit", 
            "number": 5
          }
        }, 
        "key": "2-29", 
        "group": {
          "role": "part of", 
          "constraints": [], 
          "role_arg": "3-9", 
          "size": {
            "words": [
              "2-27"
            ], 
            "mention": "explicit", 
            "number": 5
          }, 
          "is_sequence": true, 
          "properties": [
            "2-25"
          ]
        }
      }, 
      "30": {
        "sentence": 2, 
        "nlp_stem": ".", 
        "index": 30, 
        "type": "punct", 
        "nlp_pos": ".", 
        "text": ".", 
        "key": "2-30"
      }, 
      "10": {
        "sentence": 2, 
        "nlp_stem": "brand", 
        "index": 10, 
        "type": "word", 
        "is_group": true, 
        "nlp_pos": "NNS", 
        "text": "brands", 
        "corenlp": {
          "size": {
            "words": [
              "2-9"
            ], 
            "mention": "explicit", 
            "number": 2
          }
        }, 
        "key": "2-10", 
        "group": {
          "role": "part of", 
          "constraints": [], 
          "role_arg": "3-9", 
          "size": {
            "words": [
              "2-9"
            ], 
            "mention": "explicit", 
            "number": 2
          }, 
          "is_sequence": true, 
          "properties": [
            "2-7"
          ]
        }
      }, 
      "11": {
        "sentence": 2, 
        "nlp_stem": ",", 
        "index": 11, 
        "type": "punct", 
        "nlp_pos": ",", 
        "text": ",", 
        "key": "2-11"
      }, 
      "12": {
        "sentence": 2, 
        "nlp_stem": "a", 
        "index": 12, 
        "type": "word", 
        "nlp_pos": "DT", 
        "text": "a", 
        "key": "2-12"
      }, 
      "13": {
        "sentence": 2, 
        "nlp_stem": "hard", 
        "index": 13, 
        "type": "word", 
        "nlp_pos": "JJ", 
        "text": "hard", 
        "key": "2-13"
      }, 
      "14": {
        "sentence": 2, 
        "nlp_stem": "drive", 
        "index": 14, 
        "type": "word", 
        "is_group": false, 
        "nlp_pos": "NN", 
        "property": {
          "is_question": false, 
          "scope": "all", 
          "value": "drive"
        }, 
        "text": "drive", 
        "key": "2-14", 
        "group": {
          "constraints": [], 
          "size": {
            "words": [], 
            "mention": "implicit"
          }, 
          "is_sequence": false, 
          "properties": []
        }
      }, 
      "15": {
        "sentence": 2, 
        "nlp_stem": "from", 
        "index": 15, 
        "type": "word", 
        "nlp_pos": "IN", 
        "text": "from", 
        "key": "2-15"
      }, 
      "16": {
        "sentence": 2, 
        "nlp_stem": "four", 
        "index": 16, 
        "type": "word", 
        "is_group": true, 
        "nlp_pos": "CD", 
        "text": "four", 
        "corenlp": {
          "number": 4
        }, 
        "key": "2-16", 
        "group": {
          "role": "part of", 
          "constraints": [], 
          "role_arg": "3-9", 
          "size": {
            "words": [
              "2-16"
            ], 
            "mention": "explicit", 
            "number": 4
          }, 
          "is_sequence": true, 
          "properties": [
            "2-14"
          ]
        }
      }, 
      "17": {
        "sentence": 2, 
        "nlp_stem": ",", 
        "index": 17, 
        "type": "punct", 
        "nlp_pos": ",", 
        "text": ",", 
        "key": "2-17"
      }, 
      "18": {
        "sentence": 2, 
        "nlp_stem": "memory", 
        "index": 18, 
        "type": "word", 
        "nlp_pos": "NN", 
        "property": {
          "is_question": false, 
          "scope": "all", 
          "value": "memory"
        }, 
        "text": "memory", 
        "key": "2-18"
      }, 
      "19": {
        "sentence": 2, 
        "nlp_stem": "from", 
        "index": 19, 
        "type": "word", 
        "nlp_pos": "IN", 
        "text": "from", 
        "key": "2-19"
      }, 
      "1": {
        "sentence": 2, 
        "nlp_stem": "he", 
        "index": 1, 
        "type": "word", 
        "nlp_pos": "PRP", 
        "text": "He", 
        "key": "2-1"
      }, 
      "2": {
        "sentence": 2, 
        "nlp_stem": "have", 
        "index": 2, 
        "type": "word", 
        "nlp_pos": "VBZ", 
        "text": "has", 
        "key": "2-2"
      }, 
      "3": {
        "sentence": 2, 
        "nlp_stem": "the", 
        "index": 3, 
        "type": "word", 
        "nlp_pos": "DT", 
        "text": "the", 
        "key": "2-3"
      }, 
      "4": {
        "sentence": 2, 
        "nlp_stem": "choice", 
        "index": 4, 
        "type": "word", 
        "nlp_pos": "NN", 
        "text": "choice", 
        "key": "2-4"
      }, 
      "5": {
        "sentence": 2, 
        "nlp_stem": "of", 
        "index": 5, 
        "type": "word", 
        "nlp_pos": "IN", 
        "text": "of", 
        "key": "2-5"
      }, 
      "6": {
        "sentence": 2, 
        "nlp_stem": "order", 
        "index": 6, 
        "type": "word", 
        "nlp_pos": "VBG", 
        "text": "ordering", 
        "key": "2-6"
      }, 
      "7": {
        "sentence": 2, 
        "nlp_stem": "chips", 
        "index": 7, 
        "type": "word", 
        "is_group": false, 
        "nlp_pos": "NNS", 
        "property": {
          "is_question": false, 
          "scope": "all", 
          "value": "chips"
        }, 
        "text": "chips", 
        "key": "2-7", 
        "group": {
          "constraints": [], 
          "size": {
            "words": [], 
            "mention": "implicit"
          }, 
          "is_sequence": false, 
          "properties": []
        }
      }, 
      "8": {
        "sentence": 2, 
        "nlp_stem": "from", 
        "index": 8, 
        "type": "word", 
        "nlp_pos": "IN", 
        "text": "from", 
        "key": "2-8"
      }, 
      "9": {
        "sentence": 2, 
        "nlp_stem": "two", 
        "index": 9, 
        "type": "word", 
        "nlp_pos": "CD", 
        "text": "two", 
        "corenlp": {
          "number": 2
        }, 
        "key": "2-9"
      }, 
      "20": {
        "sentence": 2, 
        "nlp_stem": "three", 
        "index": 20, 
        "type": "word", 
        "is_group": true, 
        "nlp_pos": "CD", 
        "text": "three", 
        "corenlp": {
          "number": 3
        }, 
        "key": "2-20", 
        "group": {
          "role": "part of", 
          "constraints": [], 
          "role_arg": "3-9", 
          "size": {
            "words": [
              "2-20"
            ], 
            "mention": "explicit", 
            "number": 3
          }, 
          "is_sequence": true, 
          "properties": [
            "2-18"
          ]
        }
      }, 
      "21": {
        "sentence": 2, 
        "nlp_stem": ",", 
        "index": 21, 
        "type": "punct", 
        "nlp_pos": ",", 
        "text": ",", 
        "key": "2-21"
      }
    }, 
    "3": {
      "1": {
        "sentence": 3, 
        "nlp_stem": "How", 
        "index": 1, 
        "type": "word", 
        "nlp_pos": "WRB", 
        "text": "How", 
        "key": "3-1"
      }, 
      "2": {
        "sentence": 3, 
        "nlp_stem": "many", 
        "index": 2, 
        "type": "word", 
        "is_group": true, 
        "nlp_pos": "JJ", 
        "text": "many", 
        "key": "3-2", 
        "group": {
          "role": "assignment of", 
          "constraints": [
            {
              "type": "compound", 
              "logic": {
                "child2": {
                  "child2": {
                    "choice": {
                      "reqnum": true, 
                      "number": "1", 
                      "children": 1, 
                      "name": "exactly", 
                      "id": "=="
                    }, 
                    "child": {
                      "choice": "bundle"
                    }
                  }, 
                  "child1": {
                    "choice": {
                      "reqnum": true, 
                      "number": "1", 
                      "children": 1, 
                      "name": "exactly", 
                      "id": "=="
                    }, 
                    "child": {
                      "choice": "memory"
                    }
                  }, 
                  "choice": {
                    "children": 2, 
                    "name": "and", 
                    "id": "and"
                  }
                }, 
                "child1": {
                  "child2": {
                    "choice": {
                      "reqnum": true, 
                      "number": "1", 
                      "children": 1, 
                      "name": "exactly", 
                      "id": "=="
                    }, 
                    "child": {
                      "choice": "drive"
                    }
                  }, 
                  "child1": {
                    "choice": {
                      "reqnum": true, 
                      "number": "1", 
                      "children": 1, 
                      "name": "exactly", 
                      "id": "=="
                    }, 
                    "child": {
                      "choice": "chips"
                    }
                  }, 
                  "choice": {
                    "children": 2, 
                    "name": "and", 
                    "id": "and"
                  }
                }, 
                "choice": {
                  "children": 2, 
                  "name": "and", 
                  "id": "and"
                }
              }
            }
          ], 
          "role_arg": "3-9", 
          "is_question_size": true, 
          "size": {
            "words": [], 
            "mention": "implicit"
          }, 
          "is_sequence": false, 
          "role_arg2": "1-7", 
          "properties": [], 
          "combination": {
            "ubound": 1, 
            "interchangeable": true, 
            "lbound": 0, 
            "order": false
          }
        }
      }, 
      "3": {
        "sentence": 3, 
        "nlp_stem": "different", 
        "index": 3, 
        "type": "word", 
        "nlp_pos": "JJ", 
        "text": "different", 
        "key": "3-3"
      }, 
      "4": {
        "sentence": 3, 
        "nlp_stem": "ways", 
        "index": 4, 
        "type": "word", 
        "nlp_pos": "NNS", 
        "text": "ways", 
        "key": "3-4"
      }, 
      "5": {
        "sentence": 3, 
        "nlp_stem": "can", 
        "index": 5, 
        "type": "word", 
        "nlp_pos": "MD", 
        "text": "can", 
        "key": "3-5"
      }, 
      "6": {
        "sentence": 3, 
        "nlp_stem": "sam", 
        "index": 6, 
        "type": "word", 
        "nlp_pos": "NNP", 
        "text": "Sam", 
        "key": "3-6"
      }, 
      "7": {
        "sentence": 3, 
        "nlp_stem": "order", 
        "index": 7, 
        "type": "word", 
        "nlp_pos": "VB", 
        "text": "order", 
        "key": "3-7"
      }, 
      "8": {
        "sentence": 3, 
        "nlp_stem": "the", 
        "index": 8, 
        "type": "word", 
        "nlp_pos": "DT", 
        "text": "the", 
        "key": "3-8"
      }, 
      "9": {
        "sentence": 3, 
        "nlp_stem": "parts", 
        "index": 9, 
        "type": "word", 
        "is_group": true, 
        "nlp_pos": "NNS", 
        "text": "parts", 
        "key": "3-9", 
        "group": {
          "constraints": [], 
          "size": {
            "words": [], 
            "mention": "implicit"
          }, 
          "is_sequence": false, 
          "properties": []
        }
      }, 
      "10": {
        "sentence": 3, 
        "nlp_stem": "?", 
        "index": 10, 
        "type": "punct", 
        "nlp_pos": ".", 
        "text": "?", 
        "key": "3-10"
      }
    }
  }, 
  "source": "http://www.csie.ntu.edu.tw/~sdlin/download/Probability%20&%20Statistics.pdf", 
  "original_text": [
    " Sam is going to assemble a computer by himself.", 
    " He: has the choice of ordering chips from two brands, a hard drive from four, memory from three, and an accessory bundle from five local stores.", 
    " How many different, ways can Sam order the parts?"
  ], 
  "solution": "120", 
  "text": [
    " Sam is going to assemble a computer by himself.", 
    " He has the choice of ordering chips from two brands, a hard drive from four, memory from three, and an accessory bundle from five local stores.", 
    " How many different ways can Sam order the parts?"
  ], 
  "corenlp": [
    "word(1-1-sam)", 
    "pos(1-1,nnp)", 
    "word(1-2-is)", 
    "pos(1-2,vbz)", 
    "word(1-3-going)", 
    "pos(1-3,vbg)", 
    "word(1-4-to)", 
    "pos(1-4,to)", 
    "word(1-5-assemble)", 
    "pos(1-5,vb)", 
    "word(1-6-a)", 
    "pos(1-6,dt)", 
    "word(1-7-computer)", 
    "pos(1-7,nn)", 
    "word(1-8-by)", 
    "pos(1-8,in)", 
    "word(1-9-himself)", 
    "pos(1-9,prp)", 
    "word(1-10-'.')", 
    "pos(1-10,'.')", 
    "nsubj(1-3,1-1)", 
    "aux(1-3,1-2)", 
    "xcomp(1-3,1-5)", 
    "mark(1-5,1-4)", 
    "dobj(1-5,1-7)", 
    "nmod:by(1-5,1-9)", 
    "det(1-7,1-6)", 
    "case(1-9,1-8)", 
    "word(2-1-he)", 
    "pos(2-1,prp)", 
    "word(2-2-has)", 
    "pos(2-2,vbz)", 
    "word(2-3-the)", 
    "pos(2-3,dt)", 
    "word(2-4-choice)", 
    "pos(2-4,nn)", 
    "word(2-5-of)", 
    "pos(2-5,in)", 
    "word(2-6-ordering)", 
    "pos(2-6,vbg)", 
    "word(2-7-chips)", 
    "pos(2-7,nns)", 
    "word(2-8-from)", 
    "pos(2-8,in)", 
    "word(2-9-two)", 
    "pos(2-9,cd)", 
    "word(2-10-brands)", 
    "pos(2-10,nns)", 
    "word(2-11-',')", 
    "pos(2-11,',')", 
    "word(2-12-a)", 
    "pos(2-12,dt)", 
    "word(2-13-hard)", 
    "pos(2-13,jj)", 
    "word(2-14-drive)", 
    "pos(2-14,nn)", 
    "word(2-15-from)", 
    "pos(2-15,in)", 
    "word(2-16-four)", 
    "pos(2-16,cd)", 
    "word(2-17-',')", 
    "pos(2-17,',')", 
    "word(2-18-memory)", 
    "pos(2-18,nn)", 
    "word(2-19-from)", 
    "pos(2-19,in)", 
    "word(2-20-three)", 
    "pos(2-20,cd)", 
    "word(2-21-',')", 
    "pos(2-21,',')", 
    "word(2-22-and)", 
    "pos(2-22,cc)", 
    "word(2-23-an)", 
    "pos(2-23,dt)", 
    "word(2-24-accessory)", 
    "pos(2-24,jj)", 
    "word(2-25-bundle)", 
    "pos(2-25,nn)", 
    "word(2-26-from)", 
    "pos(2-26,in)", 
    "word(2-27-five)", 
    "pos(2-27,cd)", 
    "word(2-28-local)", 
    "pos(2-28,jj)", 
    "word(2-29-stores)", 
    "pos(2-29,nns)", 
    "word(2-30-'.')", 
    "pos(2-30,'.')", 
    "dobj(2-2,2-4)", 
    "nsubj(2-2,2-1)", 
    "det(2-4,2-3)", 
    "acl(2-4,2-6)", 
    "mark(2-6,2-5)", 
    "dobj(2-6,2-7)", 
    "dobj(2-6,2-25)", 
    "dobj(2-6,2-14)", 
    "dobj(2-6,2-18)", 
    "cc(2-7,2-22)", 
    "conj:and(2-7,2-25)", 
    "nmod:from(2-7,2-10)", 
    "conj:and(2-7,2-14)", 
    "conj:and(2-7,2-18)", 
    "case(2-10,2-8)", 
    "nummod(2-10,2-9)", 
    "det(2-14,2-12)", 
    "amod(2-14,2-13)", 
    "nmod:from(2-14,2-16)", 
    "case(2-16,2-15)", 
    "nmod:from(2-18,2-20)", 
    "case(2-20,2-19)", 
    "det(2-25,2-23)", 
    "amod(2-25,2-24)", 
    "nmod:from(2-25,2-29)", 
    "case(2-29,2-26)", 
    "nummod(2-29,2-27)", 
    "amod(2-29,2-28)", 
    "word(3-1-how)", 
    "pos(3-1,wrb)", 
    "word(3-2-many)", 
    "pos(3-2,jj)", 
    "word(3-3-different)", 
    "pos(3-3,jj)", 
    "word(3-4-ways)", 
    "pos(3-4,nns)", 
    "word(3-5-can)", 
    "pos(3-5,md)", 
    "word(3-6-sam)", 
    "pos(3-6,nnp)", 
    "word(3-7-order)", 
    "pos(3-7,vb)", 
    "word(3-8-the)", 
    "pos(3-8,dt)", 
    "word(3-9-parts)", 
    "pos(3-9,nns)", 
    "word(3-10-'?')", 
    "pos(3-10,'.')", 
    "nsubj(3-7,3-6)", 
    "dobj(3-7,3-9)", 
    "dep(3-7,3-4)", 
    "aux(3-7,3-5)", 
    "det(3-9,3-8)", 
    "advmod(3-2,3-1)", 
    "amod(3-4,3-2)", 
    "amod(3-4,3-3)"
  ], 
  "category": {
    "name": "simple counting", 
    "id": 3
  }, 
  "time_added": "2016-07-27T11:44:51.169000", 
  "status": "done"
}