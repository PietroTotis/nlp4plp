
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AGGCMP ALL ALLDIFF ALLSAME AND ATLEAST ATMOST AVERAGE COMMA DIVIDE EQUALS EVEN EXACTLY FLOAT GIVEN GROUP GT INT LABEL LPAR LSPAR LT MAX MIN MUL NONE NOT NTH OBSERVE ODD OR PRIME PROBABILITY PROPERTY REL REST RPAR RSPAR SEMI SIZE SLASH SOME STOP SUM TAKE TAKE_WR UNIONprogram : statement\n            | statement program\n    statement : group\n            | take\n            | take_wr\n            | size\n            | given\n            | union\n            | observe\n            | probability\n            | property\n    term : num\n            | LABEL\n            | LABEL LPAR t_list RPAR\n    num : INT \n            | FLOAT\n    t_list : term\n            | term COMMA t_list\n    group : GROUP LPAR LABEL RPAR STOP\n            | GROUP LPAR rest RPAR STOP\n    size : SIZE LPAR LABEL COMMA INT RPAR STOPrest : REST LPAR LABEL RPARtake : TAKE LPAR LABEL COMMA LABEL COMMA INT RPAR STOP\n            | TAKE LPAR rest COMMA LABEL COMMA INT RPAR STOP\n    take_wr : TAKE_WR LPAR LABEL COMMA LABEL COMMA INT RPAR STOP\n                | TAKE_WR LPAR rest COMMA LABEL COMMA INT RPAR STOP\n     given : GIVEN LPAR how_many RPAR STOPproperty : PROPERTY LPAR term COMMA LSPAR  t_list RSPAR RPAR STOPproposition : term\n          | AND LPAR logic COMMA logic RPAR\n          | OR LPAR logic COMMA logic RPAR \n          | NOT LPAR logic RPAR\n          | aggcmp\n          | ALLSAME LPAR LABEL COMMA term RPAR\n          | ALLDIFF LPAR LABEL COMMA term RPAR\n    how_many : ALL LPAR LABEL COMMA proposition RPAR \n            | NONE LPAR LABEL COMMA proposition RPAR \n            | SOME LPAR LABEL COMMA proposition RPAR \n            | NTH LPAR INT COMMA LABEL COMMA proposition RPAR\n            | ATLEAST LPAR INT COMMA LABEL COMMA proposition RPAR\n            | ATMOST LPAR INT COMMA LABEL COMMA proposition RPAR\n            | exactly\n    \n    logic : proposition\n            | how_many\n    op : SUM \n        | MUL \n        | MIN\n        | MAX\n        | AVERAGE\n    comp : EQUALS SEMI EQUALS\n         | LT\n         | GT\n         | GT EQUALS\n         | EQUALS LT\n         | EQUALS SLASH EQUALS\n    rel : REL LPAR num DIVIDE num COMMA t_list RPAR\n           | REL LPAR FLOAT COMMA t_list RPAR\n    short : EVEN \n            | ODD \n            | PRIME\n    exactly : EXACTLY LPAR rel COMMA LABEL COMMA proposition RPAR \n                | EXACTLY LPAR INT COMMA LABEL COMMA proposition RPAR\n    union : UNION LPAR LABEL COMMA LSPAR t_list RSPAR RPAR STOP\n    aggcmp : AGGCMP LPAR LABEL COMMA term COMMA op COMMA comp COMMA INT RPAR\n           | AGGCMP LPAR LABEL COMMA term COMMA op COMMA short RPAR\n    probability : PROBABILITY LPAR logic RPAR STOPobserve : OBSERVE LPAR logic RPAR STOP'
    
_lr_action_items = {'GROUP':([0,2,3,4,5,6,7,8,9,10,11,93,94,101,112,121,152,192,193,194,195,203,210,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-19,-20,-27,-67,-66,-21,-23,-24,-25,-26,-63,-28,]),'TAKE':([0,2,3,4,5,6,7,8,9,10,11,93,94,101,112,121,152,192,193,194,195,203,210,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-19,-20,-27,-67,-66,-21,-23,-24,-25,-26,-63,-28,]),'TAKE_WR':([0,2,3,4,5,6,7,8,9,10,11,93,94,101,112,121,152,192,193,194,195,203,210,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-19,-20,-27,-67,-66,-21,-23,-24,-25,-26,-63,-28,]),'SIZE':([0,2,3,4,5,6,7,8,9,10,11,93,94,101,112,121,152,192,193,194,195,203,210,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-19,-20,-27,-67,-66,-21,-23,-24,-25,-26,-63,-28,]),'GIVEN':([0,2,3,4,5,6,7,8,9,10,11,93,94,101,112,121,152,192,193,194,195,203,210,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-19,-20,-27,-67,-66,-21,-23,-24,-25,-26,-63,-28,]),'UNION':([0,2,3,4,5,6,7,8,9,10,11,93,94,101,112,121,152,192,193,194,195,203,210,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-19,-20,-27,-67,-66,-21,-23,-24,-25,-26,-63,-28,]),'OBSERVE':([0,2,3,4,5,6,7,8,9,10,11,93,94,101,112,121,152,192,193,194,195,203,210,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-19,-20,-27,-67,-66,-21,-23,-24,-25,-26,-63,-28,]),'PROBABILITY':([0,2,3,4,5,6,7,8,9,10,11,93,94,101,112,121,152,192,193,194,195,203,210,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-19,-20,-27,-67,-66,-21,-23,-24,-25,-26,-63,-28,]),'PROPERTY':([0,2,3,4,5,6,7,8,9,10,11,93,94,101,112,121,152,192,193,194,195,203,210,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-19,-20,-27,-67,-66,-21,-23,-24,-25,-26,-63,-28,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,21,93,94,101,112,121,152,192,193,194,195,203,210,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-2,-19,-20,-27,-67,-66,-21,-23,-24,-25,-26,-63,-28,]),'LPAR':([12,13,14,15,16,17,18,19,20,33,40,41,42,43,44,45,47,53,54,55,57,58,59,62,110,],[22,23,24,25,26,27,28,29,30,68,75,76,77,78,79,80,81,84,85,86,87,88,89,90,137,]),'LABEL':([22,23,24,25,27,28,29,30,68,69,70,71,72,75,76,77,84,85,86,87,88,89,90,111,122,129,130,131,132,133,134,135,136,139,140,142,144,145,146,178,179,180,181,182,184,216,],[31,34,36,38,48,58,58,58,95,96,97,98,99,102,103,104,58,58,58,116,58,119,120,58,58,58,58,58,156,157,158,159,160,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'REST':([22,23,24,],[33,33,33,]),'ALL':([26,28,29,84,85,86,139,140,],[40,40,40,40,40,40,40,40,]),'NONE':([26,28,29,84,85,86,139,140,],[41,41,41,41,41,41,41,41,]),'SOME':([26,28,29,84,85,86,139,140,],[42,42,42,42,42,42,42,42,]),'NTH':([26,28,29,84,85,86,139,140,],[43,43,43,43,43,43,43,43,]),'ATLEAST':([26,28,29,84,85,86,139,140,],[44,44,44,44,44,44,44,44,]),'ATMOST':([26,28,29,84,85,86,139,140,],[45,45,45,45,45,45,45,45,]),'EXACTLY':([26,28,29,84,85,86,139,140,],[47,47,47,47,47,47,47,47,]),'AND':([28,29,84,85,86,129,130,131,139,140,178,179,180,181,182,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'OR':([28,29,84,85,86,129,130,131,139,140,178,179,180,181,182,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NOT':([28,29,84,85,86,129,130,131,139,140,178,179,180,181,182,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ALLSAME':([28,29,84,85,86,129,130,131,139,140,178,179,180,181,182,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ALLDIFF':([28,29,84,85,86,129,130,131,139,140,178,179,180,181,182,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'AGGCMP':([28,29,84,85,86,129,130,131,139,140,178,179,180,181,182,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'INT':([28,29,30,73,78,79,80,81,84,85,86,88,111,122,124,125,126,127,129,130,131,137,139,140,142,144,145,146,178,179,180,181,182,183,184,216,229,],[60,60,60,100,105,106,107,109,60,60,60,60,60,60,148,149,150,151,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,235,]),'FLOAT':([28,29,30,84,85,86,88,111,122,129,130,131,137,139,140,142,144,145,146,178,179,180,181,182,183,184,216,],[63,63,63,63,63,63,63,63,63,63,63,63,162,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'RPAR':([31,32,39,46,49,50,51,52,56,58,60,61,63,64,95,100,115,117,118,123,141,143,148,149,150,151,153,154,155,163,164,165,166,167,168,170,175,176,177,186,187,188,189,196,197,198,199,200,202,211,212,213,214,215,219,221,225,226,227,230,235,238,],[66,67,74,-42,83,-43,-44,-29,-33,-13,-15,-12,-16,91,123,128,141,143,-17,-22,-32,-14,171,172,173,174,175,176,177,185,186,187,188,-18,189,191,-36,-37,-38,-30,-31,-34,-35,211,212,213,214,215,217,-39,-40,-41,-61,-62,228,230,-58,-59,-60,-65,238,-64,]),'COMMA':([34,35,36,37,38,46,48,50,51,52,56,58,60,61,63,65,96,97,98,99,102,103,104,105,106,107,108,109,113,114,116,118,119,120,123,141,143,156,157,158,159,160,162,169,175,176,177,186,187,188,189,201,204,205,206,207,208,209,211,212,213,214,215,217,220,223,224,228,230,232,234,236,237,238,],[69,70,71,72,73,-42,82,-43,-44,-29,-33,-13,-15,-12,-16,92,124,125,126,127,129,130,131,132,133,134,135,136,139,140,142,144,145,146,-22,-32,-14,178,179,180,181,182,184,190,-36,-37,-38,-30,-31,-34,-35,216,218,-45,-46,-47,-48,-49,-39,-40,-41,-61,-62,-57,229,-51,-52,-56,-65,-54,-53,-50,-55,-64,]),'RSPAR':([58,60,61,63,118,138,143,147,167,],[-13,-15,-12,-16,-17,163,-14,170,-18,]),'DIVIDE':([60,161,162,],[-15,183,-16,]),'STOP':([66,67,74,83,91,128,171,172,173,174,185,191,],[93,94,101,112,121,152,192,193,194,195,203,210,]),'REL':([81,],[110,]),'LSPAR':([82,92,],[111,122,]),'SUM':([190,],[205,]),'MUL':([190,],[206,]),'MIN':([190,],[207,]),'MAX':([190,],[208,]),'AVERAGE':([190,],[209,]),'EQUALS':([218,224,231,233,],[222,234,236,237,]),'LT':([218,222,],[223,232,]),'GT':([218,],[224,]),'EVEN':([218,],[225,]),'ODD':([218,],[226,]),'PRIME':([218,],[227,]),'SEMI':([222,],[231,]),'SLASH':([222,],[233,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,21,]),'statement':([0,2,],[2,2,]),'group':([0,2,],[3,3,]),'take':([0,2,],[4,4,]),'take_wr':([0,2,],[5,5,]),'size':([0,2,],[6,6,]),'given':([0,2,],[7,7,]),'union':([0,2,],[8,8,]),'observe':([0,2,],[9,9,]),'probability':([0,2,],[10,10,]),'property':([0,2,],[11,11,]),'rest':([22,23,24,],[32,35,37,]),'how_many':([26,28,29,84,85,86,139,140,],[39,51,51,51,51,51,51,51,]),'exactly':([26,28,29,84,85,86,139,140,],[46,46,46,46,46,46,46,46,]),'logic':([28,29,84,85,86,139,140,],[49,64,113,114,115,164,165,]),'proposition':([28,29,84,85,86,129,130,131,139,140,178,179,180,181,182,],[50,50,50,50,50,153,154,155,50,50,196,197,198,199,200,]),'term':([28,29,30,84,85,86,88,111,122,129,130,131,139,140,142,144,145,146,178,179,180,181,182,184,216,],[52,52,65,52,52,52,118,118,118,52,52,52,52,52,166,118,168,169,52,52,52,52,52,118,118,]),'aggcmp':([28,29,84,85,86,129,130,131,139,140,178,179,180,181,182,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'num':([28,29,30,84,85,86,88,111,122,129,130,131,137,139,140,142,144,145,146,178,179,180,181,182,183,184,216,],[61,61,61,61,61,61,61,61,61,61,61,61,161,61,61,61,61,61,61,61,61,61,61,61,201,61,61,]),'rel':([81,],[108,]),'t_list':([88,111,122,144,184,216,],[117,138,147,167,202,219,]),'op':([190,],[204,]),'comp':([218,],[220,]),'short':([218,],[221,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','grammar.py',81),
  ('program -> statement program','program',2,'p_program','grammar.py',82),
  ('statement -> group','statement',1,'p_statement','grammar.py',86),
  ('statement -> take','statement',1,'p_statement','grammar.py',87),
  ('statement -> take_wr','statement',1,'p_statement','grammar.py',88),
  ('statement -> size','statement',1,'p_statement','grammar.py',89),
  ('statement -> given','statement',1,'p_statement','grammar.py',90),
  ('statement -> union','statement',1,'p_statement','grammar.py',91),
  ('statement -> observe','statement',1,'p_statement','grammar.py',92),
  ('statement -> probability','statement',1,'p_statement','grammar.py',93),
  ('statement -> property','statement',1,'p_statement','grammar.py',94),
  ('term -> num','term',1,'p_term','grammar.py',98),
  ('term -> LABEL','term',1,'p_term','grammar.py',99),
  ('term -> LABEL LPAR t_list RPAR','term',4,'p_term','grammar.py',100),
  ('num -> INT','num',1,'p_num','grammar.py',104),
  ('num -> FLOAT','num',1,'p_num','grammar.py',105),
  ('t_list -> term','t_list',1,'p_t_list','grammar.py',109),
  ('t_list -> term COMMA t_list','t_list',3,'p_t_list','grammar.py',110),
  ('group -> GROUP LPAR LABEL RPAR STOP','group',5,'p_group','grammar.py',114),
  ('group -> GROUP LPAR rest RPAR STOP','group',5,'p_group','grammar.py',115),
  ('size -> SIZE LPAR LABEL COMMA INT RPAR STOP','size',7,'p_size','grammar.py',118),
  ('rest -> REST LPAR LABEL RPAR','rest',4,'p_rest','grammar.py',121),
  ('take -> TAKE LPAR LABEL COMMA LABEL COMMA INT RPAR STOP','take',9,'p_take','grammar.py',124),
  ('take -> TAKE LPAR rest COMMA LABEL COMMA INT RPAR STOP','take',9,'p_take','grammar.py',125),
  ('take_wr -> TAKE_WR LPAR LABEL COMMA LABEL COMMA INT RPAR STOP','take_wr',9,'p_take_wr','grammar.py',128),
  ('take_wr -> TAKE_WR LPAR rest COMMA LABEL COMMA INT RPAR STOP','take_wr',9,'p_take_wr','grammar.py',129),
  ('given -> GIVEN LPAR how_many RPAR STOP','given',5,'p_given','grammar.py',132),
  ('property -> PROPERTY LPAR term COMMA LSPAR t_list RSPAR RPAR STOP','property',9,'p_property','grammar.py',135),
  ('proposition -> term','proposition',1,'p_proposition','grammar.py',138),
  ('proposition -> AND LPAR logic COMMA logic RPAR','proposition',6,'p_proposition','grammar.py',139),
  ('proposition -> OR LPAR logic COMMA logic RPAR','proposition',6,'p_proposition','grammar.py',140),
  ('proposition -> NOT LPAR logic RPAR','proposition',4,'p_proposition','grammar.py',141),
  ('proposition -> aggcmp','proposition',1,'p_proposition','grammar.py',142),
  ('proposition -> ALLSAME LPAR LABEL COMMA term RPAR','proposition',6,'p_proposition','grammar.py',143),
  ('proposition -> ALLDIFF LPAR LABEL COMMA term RPAR','proposition',6,'p_proposition','grammar.py',144),
  ('how_many -> ALL LPAR LABEL COMMA proposition RPAR','how_many',6,'p_how_many','grammar.py',148),
  ('how_many -> NONE LPAR LABEL COMMA proposition RPAR','how_many',6,'p_how_many','grammar.py',149),
  ('how_many -> SOME LPAR LABEL COMMA proposition RPAR','how_many',6,'p_how_many','grammar.py',150),
  ('how_many -> NTH LPAR INT COMMA LABEL COMMA proposition RPAR','how_many',8,'p_how_many','grammar.py',151),
  ('how_many -> ATLEAST LPAR INT COMMA LABEL COMMA proposition RPAR','how_many',8,'p_how_many','grammar.py',152),
  ('how_many -> ATMOST LPAR INT COMMA LABEL COMMA proposition RPAR','how_many',8,'p_how_many','grammar.py',153),
  ('how_many -> exactly','how_many',1,'p_how_many','grammar.py',154),
  ('logic -> proposition','logic',1,'p_logic','grammar.py',159),
  ('logic -> how_many','logic',1,'p_logic','grammar.py',160),
  ('op -> SUM','op',1,'p_op','grammar.py',163),
  ('op -> MUL','op',1,'p_op','grammar.py',164),
  ('op -> MIN','op',1,'p_op','grammar.py',165),
  ('op -> MAX','op',1,'p_op','grammar.py',166),
  ('op -> AVERAGE','op',1,'p_op','grammar.py',167),
  ('comp -> EQUALS SEMI EQUALS','comp',3,'p_comp','grammar.py',171),
  ('comp -> LT','comp',1,'p_comp','grammar.py',172),
  ('comp -> GT','comp',1,'p_comp','grammar.py',173),
  ('comp -> GT EQUALS','comp',2,'p_comp','grammar.py',174),
  ('comp -> EQUALS LT','comp',2,'p_comp','grammar.py',175),
  ('comp -> EQUALS SLASH EQUALS','comp',3,'p_comp','grammar.py',176),
  ('rel -> REL LPAR num DIVIDE num COMMA t_list RPAR','rel',8,'p_rel','grammar.py',180),
  ('rel -> REL LPAR FLOAT COMMA t_list RPAR','rel',6,'p_rel','grammar.py',181),
  ('short -> EVEN','short',1,'p_short','grammar.py',185),
  ('short -> ODD','short',1,'p_short','grammar.py',186),
  ('short -> PRIME','short',1,'p_short','grammar.py',187),
  ('exactly -> EXACTLY LPAR rel COMMA LABEL COMMA proposition RPAR','exactly',8,'p_exactly','grammar.py',191),
  ('exactly -> EXACTLY LPAR INT COMMA LABEL COMMA proposition RPAR','exactly',8,'p_exactly','grammar.py',192),
  ('union -> UNION LPAR LABEL COMMA LSPAR t_list RSPAR RPAR STOP','union',9,'p_union','grammar.py',196),
  ('aggcmp -> AGGCMP LPAR LABEL COMMA term COMMA op COMMA comp COMMA INT RPAR','aggcmp',12,'p_aggcmp','grammar.py',201),
  ('aggcmp -> AGGCMP LPAR LABEL COMMA term COMMA op COMMA short RPAR','aggcmp',10,'p_aggcmp','grammar.py',202),
  ('probability -> PROBABILITY LPAR logic RPAR STOP','probability',5,'p_probability','grammar.py',205),
  ('observe -> OBSERVE LPAR logic RPAR STOP','observe',5,'p_observe','grammar.py',208),
]
